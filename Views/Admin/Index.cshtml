@using EIRLSSAssignment1.Models.enums;
@using EIRLSSAssignment1.Common
@model EIRLSSAssignment1.Models.AdminViewModel
@{
    ViewBag.Title = "Admin Panel";
}

<h2>Admin Panel</h2>

<div class="container-fluid">
    <div id="accordion">
        <div class="card">
            <div class="card-header bg-dark" id="headingConfiguration">
                <h5 class="mb-0">
                    <button class="btn btn-warning " data-toggle="collapse" data-target="#collapseConfiguration" aria-expanded="false" aria-controls="collapseConfiguration">
                        <i class="fa fa-wrench"></i>
                        <strong>Configuration Records</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseConfiguration" class="collapse" aria-labelledby="headingConfiguration" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Configuration records store system-wide information. There must always be one active record.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Configurations[0].Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Configurations[0].OpeningTime)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Configurations[0].ClosingTime)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Configurations[0].IsOpenForRentals)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Configurations[0].IsConfigurationActive)
                            </th>
                            <th>
                                <p>Actions</p>
                            </th>
                        </tr>

                        @foreach (var item in Model.Configurations)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.OpeningTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.ClosingTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsOpenForRentals)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsConfigurationActive)
                                </td>
                                <td>
                                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Details","Configuration", new { id = item.Id })';return false;">Details</button>
                                    <button class="btn btn-danger" onclick="location.href='@Url.Action("Delete","Configuration", new { id = item.Id })';return false;">Delete</button>
                                </td>
                            </tr>
                        }
                    </table>
                    <button class="btn btn-success" onclick="location.href='@Url.Action("Create","Configuration", new {})';return false;">Create</button>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingVehicles">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapseVehicles" aria-expanded="false" aria-controls="collapseVehicles">
                        <i class="fa fa-car"></i>
                        <strong>Vehicles</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseVehicles" class="collapse" aria-labelledby="headingVehicles" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Vehicles available to rent can be created and configured in this window.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Vehicles[0].VRM)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Vehicles[0].Make)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Vehicles[0].Model)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Vehicles[0].EngineSize)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Vehicles[0].Transmission)
                            </th>
                            <th>
                                <p>Actions</p>
                            </th>
                        </tr>

                        @foreach (var item in Model.Vehicles)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.VRM)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Make)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Model)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EngineSize)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Transmission)
                                </td>
                                <td>
                                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Details","Vehicle", new { id = item.Id })';return false;">Details</button>
                                    <button class="btn btn-danger" onclick="location.href='@Url.Action("Delete","Vehicle", new { id = item.Id })';return false;">Delete</button>
                                </td>
                            </tr>
                        }
                    </table>
                    <button class="btn btn-success" onclick="location.href='@Url.Action("Create","Vehicle", new {})';return false;">Create</button>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingVehicleTypes">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapseVehicleTypes" aria-expanded="false" aria-controls="collapseVehicleTypes">
                        <i class="fa fa-cogs"></i>
                        <strong>Vehicle Types</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseVehicleTypes" class="collapse" aria-labelledby="headingVehicleTypes" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Vehicle types are the classification of each vehicle e.g. Car or Van.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.VehicleTypes[0].Value)
                            </th>
                            <th>
                                <p>Actions</p>
                            </th>
                        </tr>

                        @foreach (var item in Model.VehicleTypes)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Value)
                                </td>
                                <td>
                                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Details","VehicleType", new { id = item.Id })';return false;">Details</button>
                                    <button class="btn btn-danger" onclick="location.href='@Url.Action("Delete","VehicleType", new { id = item.Id })';return false;">Delete</button>
                                </td>
                            </tr>
                        }
                    </table>
                    <button class="btn btn-success" onclick="location.href='@Url.Action("Create","VehicleType", new {})';return false;">Create</button>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingFuelTypes">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapseFuelTypes" aria-expanded="false" aria-controls="collapseFuelTypes">
                        <i class="fa fa-gas-pump"></i>
                        <strong>Fuel Types</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseFuelTypes" class="collapse" aria-labelledby="headingFuelTypes" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Vehicle Fuel Types are customised using this window.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.FuelTypes[0].Value)
                            </th>
                            <th>
                                <p>Actions</p>
                            </th>
                        </tr>

                        @foreach (var item in Model.FuelTypes)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Value)
                                </td>
                                <td>
                                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Details","FuelType", new { id = item.Id })';return false;">Details</button>
                                    <button class="btn btn-danger" onclick="location.href='@Url.Action("Delete","FuelType", new { id = item.Id })';return false;">Delete</button>
                                </td>
                            </tr>
                        }
                    </table>
                    <button class="btn btn-success" onclick="location.href='@Url.Action("Create","FuelType", new {})';return false;">Create</button>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingOptionalExtras">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapseOptionalExtras" aria-expanded="false" aria-controls="collapseOptionalExtras">
                        <i class="fa fa-clipboard-list"></i>
                        <strong>Optional Extras</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseOptionalExtras" class="collapse" aria-labelledby="headingOptionalExtras" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Optional extras can be added to a users booking if they are available.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.OptionalExtras[0].Name)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OptionalExtras[0].serialNumber)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.OptionalExtras[0].Remarks)
                            </th>
                            <th>
                                <p>Actions</p>
                            </th>
                        </tr>

                        @foreach (var item in Model.OptionalExtras)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.serialNumber)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Remarks)
                                </td>
                                <td>
                                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Details", "OptionalExtra", new { id = item.Id })';return false;">Details</button>
                                    <button class="btn btn-danger" onclick="location.href='@Url.Action("Delete","OptionalExtra", new { id = item.Id })';return false;">Delete</button>
                                </td>
                            </tr>
                        }
                    </table>
                    <button class="btn btn-success" onclick="location.href='@Url.Action("Create","OptionalExtra", new {})';return false;">Create</button>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingBooking">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapseBooking" aria-expanded="false" aria-controls="collapseBooking">
                        <i class="fa fa-calendar-alt"></i>
                        <strong>Bookings</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseBooking" class="collapse" aria-labelledby="headingBooking" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Users can only view their own bookings, all system bookings can be viewed with this window.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Bookings[0].Vehicle.DisplayString)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Bookings[0].BookingStart)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Bookings[0].BookingFinish)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Bookings[0].IsLateReturn)
                            </th>
                            <th>
                                <p>Flags</p>
                            </th>
                            <th>
                                <p>Actions</p>
                            </th>
                        </tr>

                        @foreach (var item in Model.Bookings)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Vehicle.DisplayString)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BookingStart)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BookingFinish)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsLateReturn)
                                </td>
                                <td>
                                    @if (item.IsReturned == true)
                                    {
                                        <span class="badge badge-success">Returned</span>
                                    }
                                    @if (DateTime.Now > item.BookingFinish && item.IsReturned == false)
                                    {
                                        <span class="badge badge-danger">OVERDUE</span>
                                    }
                                    @if (DateTime.Now >= item.BookingStart && DateTime.Now <= item.BookingFinish && item.IsReturned == false)
                                    {
                                        <span class="badge badge-warning">Current</span>
                                    }
                                    @if (DateTime.Now < item.BookingStart && item.IsReturned == false)
                                    {
                                        <span class="badge badge-info">Upcoming</span>
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Details", "Booking", new { id = item.Id })';return false;">Details</button>
                                    <button class="btn btn-danger" onclick="location.href='@Url.Action("Delete","Booking", new { id = item.Id })';return false;">Delete</button>
                                </td>
                            </tr>
                        }
                    </table>
                    <button class="btn btn-success" onclick="location.href='@Url.Action("Create","Booking", new {})';return false;">Create</button>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingUsers">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapseUsers" aria-expanded="false" aria-controls="collapseUsers">
                        <i class="fa fa-users"></i>
                        <strong>Users</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseUsers" class="collapse" aria-labelledby="headingUsers" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Admins may be required to edit user details, blacklist a user or lock their account entirely.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Users[0].Name)
                            </th>
                            <th>
                                <p>Flags</p>
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Users[0].LockoutEnabled)
                            </th>
                            <th></th>
                        </tr>

                        @foreach (var item in Model.Users)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Name)
                                </td>
                                <td>
                                    @if (item.IsBlackListed == true)
                                    {
                                        <span class="badge badge-dark">Blacklisted</span>
                                    }
                                    @if (item.IsTrustedCustomer == true)
                                    {
                                        <span class="badge badge-success">Trusted</span>
                                    }
                                    @if (item.LockoutEndDateUtc != null)
                                    {
                                        <span class="badge badge-danger">Locked</span>
                                    }
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.LockoutEnabled)
                                </td>
                                <td>
                                    <button class="btn btn-primary" onclick="location.href='@Url.Action("Details", "Account", new { id = item.Id })';return false;">Details</button>
                                </td>
                            </tr>
                        }

                    </table>
                    <button class="btn btn-success" onclick="location.href='@Url.Action("Register","Account", new {})';return false;">Create</button>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingPendingBookings">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapsePendingBookings" aria-expanded="false" aria-controls="collapsePendingBookings">
                        <i class="fa fa-list"></i>
                        <strong>Booking Collections</strong>
                    </button>
                </h5>
            </div>
            <div id="collapsePendingBookings" class="collapse" aria-labelledby="headingPendingBookings" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Pending bookings require collection actions on the day by a garage administrator. This process will validate documents and upon success, confirm the booking.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.Bookings[0].Vehicle.DisplayString)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Bookings[0].BookingStart)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Bookings[0].BookingFinish)
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.Bookings[0].IsLateReturn)
                            </th>
                            <th>
                                <p>Flags</p>
                            </th>
                            <th>
                                <p>Status</p>
                            </th>
                            <th>
                                <p>Actions</p>
                            </th>
                        </tr>

                        @foreach (var item in Model.PendingCollections)
                        {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Vehicle.DisplayString)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BookingStart)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.BookingFinish)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.IsLateReturn)
                                </td>
                                <td>
                                    @if (item.BookingStatus == BookingStatus.Reserved)
                                    {
                                        <span class="badge badge-warning">Reserved</span>
                                    }
                                    @if (item.BookingStatus == BookingStatus.Approved)
                                    {
                                        <span class="badge badge-success">Reserved</span>
                                    }
                                    @if (item.BookingStatus == BookingStatus.Rejected)
                                    {
                                        <span class="badge badge-danger">Rejected</span>
                                    }
                                </td>
                                <td>
                                    @if (item.IsReturned == true)
                                    {
                                        <span class="badge badge-success">Returned</span>
                                    }
                                    @if (DateTime.Now > item.BookingFinish && item.IsReturned == false)
                                    {
                                        <span class="badge badge-danger">OVERDUE</span>
                                    }
                                    @if (DateTime.Now >= item.BookingStart && DateTime.Now <= item.BookingFinish && item.IsReturned == false)
                                    {
                                        <span class="badge badge-warning">Current</span>
                                    }
                                    @if (DateTime.Now < item.BookingStart && item.IsReturned == false)
                                    {
                                        <span class="badge badge-info">Upcoming</span>
                                    }
                                    @if (item.BookingStatus == BookingStatus.Rejected)
                                    {
                                        <span class="badge badge-danger">Cancelled</span>
                                    }
                                </td>
                                <td>
                                    <button class="btn btn-primary" onclick="location.href = '@Url.Action("CaptureLicense", "Collection", new { bookingId = item.Id })';return false;">Collect</button>
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingExtensions">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapseExtensions" aria-expanded="false" aria-controls="collapseExtensions">
                        <i class="fa fa-exclamation"></i>
                        <strong>Extensions</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseExtensions" class="collapse" aria-labelledby="headingExtensions" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>User documents are required before they can make a booking.</p>
                    </div>
                    <table class="table table-striped">
                        <tr>
                            <th>
                                @Html.DisplayNameFor(model => model.ExtensionRequests[0].Booking.DisplayString)
                            </th>
                            <th>
                                <p>Extended Date</p>
                            </th>
                            <th>
                                @Html.DisplayNameFor(model => model.ExtensionRequests[0].extensionRequestStatus)
                            </th>
                            <th>
                                <p>Actions</p>
                            </th>
                        </tr>

                        @foreach (var item in Model.ExtensionRequests)
                        {
                            <tr>
                                <td>
                                    <a href="@Url.Action("Details", "Booking", new {id = item.BookingId})" target="_blank">@item.Booking.DisplayString</a>
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.EndDateRequest)
                                </td>
                                <td>
                                    @if (item.extensionRequestStatus == ExtensionStatus.Pending)
                                    {
                                        <span class="badge badge-info">Pending</span>
                                    }
                                    @if (item.extensionRequestStatus == ExtensionStatus.Accepted)
                                    {
                                        <span class="badge badge-success">Accepted</span>
                                    }
                                    @if (item.extensionRequestStatus == ExtensionStatus.Rejected)
                                    {
                                        <span class="badge badge-danger">Rejected</span>
                                    }
                                </td>
                                <td>
                                    @if (item.extensionRequestStatus == ExtensionStatus.Accepted || item.extensionRequestStatus == ExtensionStatus.Rejected)
                                    {
                                        <p>No action needed</p>
                                    }
                                    else
                                    {
                                        <button class="btn btn-success fa fa-check" onclick="location.href='@Url.Action("Approve", "ExtensionRequest", new { approved = true, extensionId = item.Id })';return false;"></button>
                                        <button class="btn btn-danger fa fa-times-circle" onclick="location.href='@Url.Action("Approve", "ExtensionRequest", new { approved = false, extensionId = item.Id })';return false;"></button>
                                    }
                                </td>
                            </tr>
                        }
                    </table>
                </div>
            </div>
        </div>
        <div class="card">
            <div class="card-header bg-dark" id="headingUtility">
                <h5 class="mb-0">
                    <button class="btn btn-warning collapsed" data-toggle="collapse" data-target="#collapseUtility" aria-expanded="false" aria-controls="collapseUtility">
                        <i class="fa fa-toolbox"></i>
                        <strong>Test Tools</strong>
                    </button>
                </h5>
            </div>
            <div id="collapseUtility" class="collapse" aria-labelledby="headingUtility" data-parent="#accordion">
                <div class="card-body">
                    <div class="row">
                        <span class="fa fa-info-circle" style="color:dodgerblue; margin-left:5px; margin-right: 5px; margin-top: 5px;"></span>
                        <p>Tools to aid in application testing.</p>
                    </div>
                    <button type="button" class="btn btn-primary" data-toggle="modal" data-target="#emailModal">Send Test Email</button>
                </div>
            </div>
        </div>
    </div>
</div>
@using (Html.BeginForm("SendTestEmail", "Admin", FormMethod.Post))
{
<div class="modal fade" id="emailModal" tabindex="-1" role="dialog" aria-labelledby="emailModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="emailModalLabel">Send Test Email</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <label for="message-text" class="control-label">Content:</label>
                    <textarea class="form-control" id="message-text" name="message"></textarea>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="submit" class="btn btn-primary">Send Email</button>
            </div>
        </div>
    </div>
</div>
}