@model EIRLSSAssignment1.Models.SupportingDocumentViewModel

@{
    ViewBag.Title = "Edit (" + Model.SupportingDocument.DocumentType + ")";
}

<div>
    <button class="btn btn-primary fa fa-arrow-circle-left" data-toggle="tooltip" title="Back" onclick="location.href='@Url.Action("Details","SupportingDocument", new {Id = Model.SupportingDocument.Id})';return false;"></button>
    <hr />
</div>


<h2>Edit (@Model.SupportingDocument.DocumentType)</h2>


@using (Html.BeginForm(null, null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()


    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.SupportingDocument.Id)
        @Html.HiddenFor(model => model.SupportingDocument.Image)

        <div class="form-group">
            @Html.LabelFor(model => model.SupportingDocument.DocumentType, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupportingDocument.DocumentType, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupportingDocument.DocumentType, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SupportingDocument.DateRecieved, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.SupportingDocument.DateRecieved, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.SupportingDocument.DateRecieved, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Current Document Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="data:image;base64,@System.Convert.ToBase64String(Model.SupportingDocument.Image)" width="300" height="200" />
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Update Image", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.ImageToUpload, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ImageToUpload, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-success" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
